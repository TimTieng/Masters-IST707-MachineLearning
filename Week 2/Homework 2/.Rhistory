knitr::opts_chunk$set(echo = TRUE, warning=FALSE, results ='show',include=TRUE,messages=FALSE)
library(tidyverse)
library(forcats)
library(ggplot2)
library(dplyr)
library(stargazer)
library(caret)
library(modelr)
#replacing any possible blank entries as 'NA'.
storyteller<- read_csv("data-storyteller.csv", na = c(""))
#checking data types to see what may need changing
str(storyteller)
storyteller$School<-factor(storyteller$School)
#The section column is of the Numeric type and should be be a factor instead
storyteller$Section<-factor(storyteller$Section)
#Each of the remaining columns is a discrete count of the students in each category.
#As it is not continuous the columns 'Very Ahead', 'Middling', 'Behind', 'More behind', 'Very behind'
#and 'Completed' should all be integers.
storyteller$`Very Ahead +5`<-as.integer(storyteller$`Very Ahead +5`)
storyteller$`Middling +0`<-as.integer(storyteller$`Middling +0`)
storyteller$`Behind -1-5`<-as.integer(storyteller$`Behind -1-5`)
storyteller$`More Behind -6-10`<-as.integer(storyteller$`More Behind -6-10`)
storyteller$`Very Behind -11`<-as.integer(storyteller$`Very Behind -11`)
storyteller$Completed<-as.integer(storyteller$Completed)
#Reordering columns to get a cleaner picture. I.E. 'Completed' being shifted to the other side.
#And section being a unique identifier is moved to the leftmost column.
storytellerTemp<-storyteller[,c(2,1,8,3,4,5,6,7)]
storyteller<-storytellerTemp
#displaying top 5 rows
head(storyteller)
#Checking for any NA values
sum(is.na(storyteller))
#There are no NA values in this dataset.
#The dataset is cleaned
head(storyteller)
# Creating a bar chart to show the number of sections from each school
SchoolValues<-c(length(which(storyteller$School=='A')), length(which(storyteller$School=='B')), length(which(storyteller$School=='C')), length(which(storyteller$School=='D')), length(which(storyteller$School=='E')))
barplot(SchoolValues, names.arg = c('A', 'B', 'C', 'D', 'E'), main='Number of sections Per School')
#plotting section and Completed and summarizing the data
barplot(storyteller$Completed, main='#completed students / section', names.arg = c(1:30))
summary(storyteller$Completed)
#Plotting section and Very Ahead and summarizing
barplot(storyteller$`Very Ahead +5`, main='number of very ahead students per section', names.arg = c(1:30))
summary(storyteller$`Very Ahead +5`)
#plotting section and Middling and summarizing
barplot(storyteller$`Middling +0`, main='number of Middling students per section', names.arg = c(1:30))
summary(storyteller$`Middling +0`)
#plotting section and Behind and summarizing
barplot(storyteller$`Behind -1-5`, main='number of Behind students per section', names.arg = c(1:30))
summary(storyteller$`Behind -1-5`)
#plotting section and More Behind
barplot(storyteller$`More Behind -6-10`, main='number of More Behind students per section', names.arg = c(1:30))
summary(storyteller$`More Behind -6-10`)
#Plotting section and Very Behind
barplot(storyteller$`Very Behind -11`, main='number of Very Behind students per section', names.arg = c(1:30))
summary(storyteller$`Very Behind -11`)
#determining the number of students in each category
StudentSums<-colSums(storyteller[,3:8])
sum(StudentSums)
#determining the amount of students in each section
SectionSums<-rowSums(storyteller[,3:8])
data.frame(SectionSums)
#Creating a barplot to show distribution
StudentSums<-colSums(storyteller[,3:8])
barplot(StudentSums, main="Student totals across all categories")
StudentSums/sum(StudentSums)
plot(storyteller$Completed, storyteller$`Middling +0`)
storytellerA<-storyteller[which(storyteller$School == "A"),]
storytellerB<-storyteller[which(storyteller$School == "B"),]
storytellerC<-storyteller[which(storyteller$School == "C"),]
storytellerD<-storyteller[which(storyteller$School == "D"),]
storytellerE<-storyteller[which(storyteller$School == "E"),]
StudentSumsA<-colSums(storytellerA[3:8])
StudentSumsA
barplot(StudentSumsA, main = "School A")
StudentSumsB<-colSums(storytellerB[3:8])
StudentSumsB
barplot(StudentSumsB, main = "School B")
StudentSumsC<-colSums(storytellerC[3:8])
StudentSumsC
barplot(StudentSumsC, main = "School C")
StudentSumsD<-colSums(storytellerD[3:8])
StudentSumsD
barplot(StudentSumsD, main = "School D")
StudentSumsE<-colSums(storytellerE[3:8])
StudentSumsE
barplot(StudentSumsE, main = "School E")
sum(StudentSumsB)/sum(StudentSums)
sum(StudentSumsD)/sum(StudentSums)
#looking at the data to determine quality sections
barplot(storytellerB$Completed, names.arg =c(1:12),ylim=c(0,30), main = "Students Completed by Section")
rowSums(storytellerB[,3:8])
barplot(storytellerB$`Behind -1-5`+storytellerB$`More Behind -6-10`+storytellerB$`Very Behind -11`, names.arg =c(1:12), ylim=c(0,30), main = "Students Behind by Section")
#Reordering columns to get a cleaner picture. I.E. 'Completed' being shifted to the other side.
#And section being a unique identifier is moved to the leftmost column.
storytellerTemp<-storyteller[,c(2,1,8,3,4,5,6,7)]
storyteller<-storytellerTemp
#displaying top 5 rows
head(storyteller)
View(storyteller)
plot(storyteller$Completed, storyteller$`Middling +0`)
plot(storyteller$Completed, storyteller$`Middling +0`)
abline(lm(storyteller$`Middling +0` ~ storyteller$Completed), col = "red")
# Plot with trendline
plot(storyteller$Completed, storyteller$`Middling +0`)
abline(lm(storyteller$`Middling +0` ~ storyteller$Completed), col = "red")
storytellerA<-storyteller[which(storyteller$School == "A"),]
storytellerB<-storyteller[which(storyteller$School == "B"),]
storytellerC<-storyteller[which(storyteller$School == "C"),]
storytellerD<-storyteller[which(storyteller$School == "D"),]
storytellerE<-storyteller[which(storyteller$School == "E"),]
StudentSumsA<-colSums(storytellerA[3:8])
StudentSumsA
barplot(StudentSumsA, main = "School A")
StudentSumsB<-colSums(storytellerB[3:8])
StudentSumsB
barplot(StudentSumsB, main = "School B")
StudentSumsC<-colSums(storytellerC[3:8])
StudentSumsC
barplot(StudentSumsC, main = "School C")
StudentSumsD<-colSums(storytellerD[3:8])
StudentSumsD
barplot(StudentSumsD, main = "School D")
StudentSumsE<-colSums(storytellerE[3:8])
StudentSumsE
barplot(StudentSumsE, main = "School E")
#looking at the data to determine quality sections
barplot(storytellerB$Completed, names.arg =c(1:12),ylim=c(0,30), main = "Students Completed by Section")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, results ='show',include=TRUE,messages=FALSE)
library(tidyverse)
library(forcats)
library(ggplot2)
library(dplyr)
library(stargazer)
library(caret)
library(modelr)
#replacing any possible blank entries as 'NA'.
storyteller<- read_csv("data-storyteller.csv", na = c(""))
#checking data types to see what may need casting
str(storyteller)
storyteller$School<-factor(storyteller$School)
#The section column is of the Numeric type and should be be a factor instead
storyteller$Section<-factor(storyteller$Section)
#Each of the remaining columns is a discrete count of the students in each category.
#As it is not continuous the columns 'Very Ahead', 'Middling', 'Behind', 'More behind', 'Very behind'
#and 'Completed' should all be integers.
storyteller$`Very Ahead +5`<-as.integer(storyteller$`Very Ahead +5`)
storyteller$`Middling +0`<-as.integer(storyteller$`Middling +0`)
storyteller$`Behind -1-5`<-as.integer(storyteller$`Behind -1-5`)
storyteller$`More Behind -6-10`<-as.integer(storyteller$`More Behind -6-10`)
storyteller$`Very Behind -11`<-as.integer(storyteller$`Very Behind -11`)
storyteller$Completed<-as.integer(storyteller$Completed)
#Reordering columns to get a cleaner picture. I.E. 'Completed' being shifted to the other side.
#And section being a unique identifier is moved to the leftmost column.
storytellerTemp<-storyteller[,c(2,1,8,3,4,5,6,7)]
storyteller<-storytellerTemp
#displaying top 5 rows
head(storyteller)
View(storyteller)
#Checking for any NA values
sum(is.na(storyteller))
#There are no NA values in this dataset.
#The dataset is cleaned
head(storyteller)
# Creating a bar chart to show the number of sections from each school
SchoolValues<-c(length(which(storyteller$School=='A')), length(which(storyteller$School=='B')), length(which(storyteller$School=='C')), length(which(storyteller$School=='D')), length(which(storyteller$School=='E')))
barplot(SchoolValues, names.arg = c('A', 'B', 'C', 'D', 'E'), main='Number of sections Per School')
#plotting section and Completed and summarizing the data
barplot(storyteller$Completed, main='#completed students / section', names.arg = c(1:30))
summary(storyteller$Completed)
#Plotting section and Very Ahead and summarizing
barplot(storyteller$`Very Ahead +5`, main='number of very ahead students per section', names.arg = c(1:30))
summary(storyteller$`Very Ahead +5`)
#plotting section and Middling and summarizing
barplot(storyteller$`Middling +0`, main='number of Middling students per section', names.arg = c(1:30))
summary(storyteller$`Middling +0`)
#plotting section and Behind and summarizing
barplot(storyteller$`Behind -1-5`, main='number of Behind students per section', names.arg = c(1:30))
summary(storyteller$`Behind -1-5`)
#plotting section and More Behind
barplot(storyteller$`More Behind -6-10`, main='number of More Behind students per section', names.arg = c(1:30))
summary(storyteller$`More Behind -6-10`)
#Plotting section and Very Behind
barplot(storyteller$`Very Behind -11`, main='number of Very Behind students per section', names.arg = c(1:30))
summary(storyteller$`Very Behind -11`)
#determining the number of students in each category
StudentSums<-colSums(storyteller[,3:8])
sum(StudentSums)
#determining the amount of students in each section
SectionSums<-rowSums(storyteller[,3:8])
data.frame(SectionSums)
#Creating a barplot to show distribution
StudentSums<-colSums(storyteller[,3:8])
barplot(StudentSums, main="Student totals across all categories")
StudentSums/sum(StudentSums)
# Plot with trendline
plot(storyteller$Completed, storyteller$`Middling +0`)
abline(lm(storyteller$`Middling +0` ~ storyteller$Completed), col = "red")
storytellerA<-storyteller[which(storyteller$School == "A"),]
storytellerB<-storyteller[which(storyteller$School == "B"),]
storytellerC<-storyteller[which(storyteller$School == "C"),]
storytellerD<-storyteller[which(storyteller$School == "D"),]
storytellerE<-storyteller[which(storyteller$School == "E"),]
StudentSumsA<-colSums(storytellerA[3:8])
StudentSumsA
barplot(StudentSumsA, main = "School A")
StudentSumsB<-colSums(storytellerB[3:8])
StudentSumsB
barplot(StudentSumsB, main = "School B")
StudentSumsC<-colSums(storytellerC[3:8])
StudentSumsC
barplot(StudentSumsC, main = "School C")
StudentSumsD<-colSums(storytellerD[3:8])
StudentSumsD
barplot(StudentSumsD, main = "School D")
StudentSumsE<-colSums(storytellerE[3:8])
StudentSumsE
barplot(StudentSumsE, main = "School E")
sum(StudentSumsB)/sum(StudentSums)
sum(StudentSumsD)/sum(StudentSums)
#looking at the data to determine quality sections
barplot(storytellerB$Completed, names.arg =c(1:12),ylim=c(0,30), main = "Students Completed by Section")
rowSums(storytellerB[,3:8])
barplot(storytellerB$`Behind -1-5`+storytellerB$`More Behind -6-10`+storytellerB$`Very Behind -11`, names.arg =c(1:12), ylim=c(0,30), main = "Students Behind by Section")
StudentSums/sum(StudentSums)
